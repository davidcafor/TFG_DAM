/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Conexion;
import Controlador.ControladorProducto;
import Controlador.ControladorTienda;
import Modelo.Inventario;
import Modelo.Producto;
import Modelo.Tienda;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Date;
import java.text.DecimalFormat;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.JComboBox;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class FrmPPal extends javax.swing.JFrame {
    
    //Para pasar la ayuda a otra ventana
    private HelpBroker browser;
    HelpSet helpset;

    /**
     * Creates new form FrmPPal
     */
    public FrmPPal() {
        initComponents();

        //ASIGNO MODELOTABLA A LA TABLA DE LIBROS
        modeloTabla = (DefaultTableModel) tblPrincipal.getModel();
        //CONECTAR BASE DATOS
        conectarBD();
        //CARGAR COMBO TIENDAS
        ControladorTienda.cargarComboTiendas(cmb_tiendas);
        //AYUDA JAVAHELP
        try {
            URL helpURL = this.getClass().getResource("/ayudas/ayuda.hs");
            //HelpSet helpset = new HelpSet(null, helpURL);
            helpset = new HelpSet(null, helpURL);
            //HelpBroker browser = helpset.createHelpBroker();
            browser = helpset.createHelpBroker();
            browser.enableHelpOnButton(menuAyuda, "index", helpset);

        } catch (Exception e) {
            System.out.println("Error en JAVAHELP " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrincipal = new javax.swing.JTable();
        cmb_tiendas = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        menuAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MODUS");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        tblPrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Producto", "Descripcion", "Precio", "Stock", "Ult. Actualizacion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPrincipal);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 872;
        gridBagConstraints.ipady = 359;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        cmb_tiendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_tiendasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 816;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 20, 10);
        getContentPane().add(cmb_tiendas, gridBagConstraints);

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Configuracion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Tienda");

        jMenuItem2.setText("Alta");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("Baja");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Modificacion");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem13.setText("Listado");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem13);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Producto");

        jMenuItem5.setText("Alta");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Baja");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Modificacion");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem12.setText("Listado");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Inventario");

        jMenuItem8.setText("Alta");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("Baja");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("Modificacion");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuItem14.setText("Listado");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem14);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Ayuda");

        menuAyuda.setText("Ayuda General");
        jMenu5.add(menuAyuda);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(916, 567));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Configuracion ventanaConfiguracion = new Configuracion(this, false);
        ventanaConfiguracion.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void cmb_tiendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tiendasActionPerformed
        // TODO add your handling code here:
        cargarTablaInventario();
    }//GEN-LAST:event_cmb_tiendasActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // ALTA TIENDA
        AltaTienda ventanaAltaTienda = new AltaTienda(this, false);
        ventanaAltaTienda.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // BAJA TIENDA
        BajaTienda ventanaBajaTienda = new BajaTienda(this, false);
        ventanaBajaTienda.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // MODIFICAR TIENDA
        ModificarTienda ventanaModificarTienda = new ModificarTienda(this, false);
        ventanaModificarTienda.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // ALTA INVENTARIO
        AltaInventario ventanaAltaInventario = new AltaInventario(this, false);
        ventanaAltaInventario.setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // ALTA PRODUCTO
        AltaProducto ventanaAltaProducto = new AltaProducto(this, false);
        ventanaAltaProducto.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // BAJA PRODUCTO
        BajaProducto ventanaBajaProducto = new BajaProducto(this, false);
        ventanaBajaProducto.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // MODIFICAR PRODUCTO
        ModificarProducto ventanaModificarProducto = new ModificarProducto(this, false);
        ventanaModificarProducto.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // BAJA INVENTARIO
        BajaInventario ventanaBajaInventario = new BajaInventario(this, false);
        ventanaBajaInventario.setVisible(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // MODIFICAR INVENTARIO
        ModificarInventario ventanaModificarInventario = new ModificarInventario(this, false);
        ventanaModificarInventario.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // LISTADO PRODUCTO
        ListadoProducto ventanaListadoProducto = new ListadoProducto(this, false);
        ventanaListadoProducto.setVisible(true);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // LISTADO TIENDA
        ListadoTiendas ventanaListadoTiendas = new ListadoTiendas(this, false);
        ventanaListadoTiendas.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // LISTADO INVENTARIO
        ListadoInventario ventanaListadoInventario = new ListadoInventario(this, false);
        ventanaListadoInventario.setVisible(true);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPPal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPPal().setVisible(true);
            }
        });
    }

    public void conectarBD() {

        cargarConfiguracionConexionBD();

        try {
            Conexion.conectarBD(urlBD, puertoBD, usuarioBD, nombreBD, claveBD);
            if (Conexion.getCon() != null) {
                System.out.println("Conexión establecida");
                ControladorTienda.cargarComboTiendas(cmb_tiendas);
            } else {
                JOptionPane.showMessageDialog(this, "Error de conexión. Asegúrate de tener bien configurada la conexion.");
                System.out.println("Fallo en la conexion");
            }
        } catch (Exception e) {
            System.out.println("Error en conexion a BBDD");
        }
    }

    //CARGAR ARCHIVO CONFIGURACION
    public void cargarConfiguracionConexionBD() {

        Properties archivoProperties = new Properties();
        InputStream ficheroConfiguracionBD = null;

        try {
            if (Configuraciones.ConfiguracionEjecucion.SISTEMA_EN_PRODUCCION) {
                System.out.println("Producción");
                ficheroConfiguracionBD = new FileInputStream("./configuracion.properties");

            } else {
                System.out.println("Desarrollo");
                ficheroConfiguracionBD = this.getClass().getResourceAsStream("/Configuraciones/configuracion.properties");
            }
            archivoProperties.load(ficheroConfiguracionBD);

            urlBD = archivoProperties.getProperty("URL");
            puertoBD = archivoProperties.getProperty("PUERTO");
            usuarioBD = archivoProperties.getProperty("USUARIO");
            claveBD = archivoProperties.getProperty("CLAVE");
            nombreBD = archivoProperties.getProperty("BD");

            System.out.println(urlBD + puertoBD + usuarioBD);

        } catch (IOException e) {
            System.out.println("Error cargando archivo de configuración de BD. El programa se cerrará");
        } catch (NullPointerException e) {
            System.out.println("No se encuentra el archivo configuracion");
        }
    }

    //Metodo para cargar la tabla con los datos de una consulta a la BD
    private DefaultTableModel modeloTabla = new DefaultTableModel();

    public void cargarTablaInventario() {

        if (cmb_tiendas.getSelectedItem() != null) {

            Statement sentencia;

            try {

                modeloTabla.setRowCount(0);

                sentencia = Conexion.getCon().createStatement();
                String consulta = "SELECT * FROM inventario WHERE id_tienda = " + ((Tienda) cmb_tiendas.getSelectedItem()).getId();
                ResultSet rs = sentencia.executeQuery(consulta);
                while (rs.next()) {
                    //CONSTRUYO OBJETOS PARA GUARDAR COMPLETOS
                    Date ult_act = rs.getDate(5);
                    Producto p = ControladorProducto.cargarProductoID(rs.getInt(2));
                    Tienda t = ControladorTienda.cargarTiendaID(rs.getInt(3));
                    Inventario i = new Inventario(rs.getInt(1), p, t, rs.getInt(4), ult_act);

                    //FORMATEO PRECIO A 2 DECIMALES
                    BigDecimal precio = p.getPrecio();
                    DecimalFormat formatoDecimal = new DecimalFormat("#0.00");
                    String precioFormateado = formatoDecimal.format(precio);

                    //AÑADO A TABLA
                    int numFilas = modeloTabla.getRowCount();
                    modeloTabla.setRowCount(numFilas + 1);
                    modeloTabla.setValueAt(p.getNombre(), numFilas, 0);
                    modeloTabla.setValueAt(p.getDescripcion(), modeloTabla.getRowCount() - 1, 1);
                    modeloTabla.setValueAt(precioFormateado, modeloTabla.getRowCount() - 1, 2);
                    modeloTabla.setValueAt(i.getCantidad(), modeloTabla.getRowCount() - 1, 3);
                    modeloTabla.setValueAt(i.getUltima_actualizacion(), modeloTabla.getRowCount() - 1, 4);
                }

            } catch (SQLException e) {
                System.out.println("Error Cargando Tabla Inventario: " + e);
            } catch (Exception e) {
                System.out.println("Error Generico Cargando Tabla Inventario: " + e);
            }
        }

    }

    //variables para leer archivo configuracion
    private String urlBD;
    private String puertoBD;
    private String usuarioBD;
    private String claveBD;
    private String nombreBD;
    
    public JComboBox getComboTiendas() {
        return cmb_tiendas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Tienda> cmb_tiendas;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuAyuda;
    private javax.swing.JTable tblPrincipal;
    // End of variables declaration//GEN-END:variables
}
